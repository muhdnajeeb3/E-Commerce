{"ast":null,"code":"import Axios from \"axios\";\nimport { PRODUCT_CREATE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS } from \"../constants/productConstants\"; //import { productListReducer } from \"../reducers/productReducers\";\n\nexport const listProducts = () => async dispatch => {\n  dispatch({\n    type: PRODUCT_LIST_REQUEST\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get('/api/products');\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\nexport const detailsProduct = productId => async dispatch => {\n  dispatch({\n    type: PRODUCT_DETAILS_REQUEST,\n    payload: productId\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.get(`/api/products/${productId}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const createProduct = () => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_CREATE_REQUEST\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/products', {}, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data.product\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateProduct = product => async (dispatch, getState) => {\n  dispatch({\n    type: PRODUCT_UPDATE_REQUEST,\n    payload: product\n  });\n  const {\n    userSignin: {\n      userInfo\n    }\n  } = getState();\n\n  try {\n    const {\n      data\n    } = await Axios.put(`/api/products/${product._id}`, product, {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    });\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      error: message\n    });\n  }\n};\nexport const deleteProduct = productId => async(dispatch);","map":{"version":3,"names":["Axios","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","listProducts","dispatch","type","data","get","payload","error","message","detailsProduct","productId","response","createProduct","getState","userSignin","userInfo","post","headers","Authorization","token","product","updateProduct","put","_id","deleteProduct","async"],"sources":["C:/Users/HP/Desktop/amazona/frontend/src/actions/action.js"],"sourcesContent":["import Axios from \"axios\";\r\nimport { \r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DETAILS_REQUEST, \r\n    PRODUCT_DETAILS_SUCCESS, \r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_LIST_REQUEST, \r\n    PRODUCT_LIST_SUCCESS, \r\n    PRODUCT_UPDATE_FAIL, \r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS} from \"../constants/productConstants\"\r\n//import { productListReducer } from \"../reducers/productReducers\";\r\n\r\nexport const listProducts = () => async (dispatch) => {\r\n    dispatch({\r\n        type: PRODUCT_LIST_REQUEST,\r\n    });\r\n    try {\r\n        const { data } = await Axios.get('/api/products');\r\n        dispatch({ type : PRODUCT_LIST_SUCCESS, payload: data})\r\n\r\n    } catch (error){\r\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message})\r\n\r\n    }\r\n};\r\nexport const detailsProduct = (productId) => async (dispatch) => {\r\n    dispatch({ type : PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    try{\r\n        const { data } = await Axios.get(`/api/products/${productId}`);\r\n        dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: \r\n            error.response && error.response.data.message\r\n             ? error.response.data.message\r\n             : error.message,\r\n        });\r\n    }\r\n};\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.post(\r\n        '/api/products',\r\n        {},\r\n        {\r\n          headers: { Authorization: `Bearer ${userInfo.token}` },\r\n        }\r\n      );\r\n      dispatch({\r\n        type: PRODUCT_CREATE_SUCCESS,\r\n        payload: data.product,\r\n      });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\r\n    }\r\n  };\r\n  export const updateProduct = (product) => async (dispatch, getState) => {\r\n    dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    try {\r\n      const { data } = await Axios.put(`/api/products/${product._id}`, product, {\r\n        headers: { Authorization: `Bearer ${userInfo.token}` },\r\n      });\r\n      dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\r\n    }\r\n  }; export const deleteProduct = (productId) => async(dispatch,)\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}