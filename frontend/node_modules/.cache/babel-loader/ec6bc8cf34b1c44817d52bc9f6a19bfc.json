{"ast":null,"code":"import Axios from \"axios\";\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstants\";\nexport const register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await Axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const signout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  dispatch({\n    type: USER_SIGNOUT\n  });\n};","map":{"version":3,"names":["Axios","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNOUT","register","name","email","password","dispatch","type","payload","data","post","localStorage","setItem","JSON","stringify","error","response","message","signin","signout","removeItem"],"sources":["C:/Users/HP/Desktop/amazona/frontend/src/actions/userActions.js"],"sourcesContent":["import  Axios  from \"axios\";\r\nimport { USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstants\"\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n     dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\r\n     try {\r\n       const { data } = await Axios.post('/api/users/register', {\r\n         name,\r\n         email,\r\n         password,\r\n       });\r\n       dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\r\n       dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\r\n       localStorage.setItem('userInfo', JSON.stringify(data));\r\n     } catch (error) {\r\n       dispatch({\r\n         type: USER_REGISTER_FAIL,\r\n         payload:\r\n           error.response && error.response.data.message\r\n             ? error.response.data.message\r\n             : error.message,\r\n       });\r\n     }\r\n   };\r\n\r\n export const signin = (email, password) => async (dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: {email, password }});\r\n    try{\r\n         const { data } = await Axios.post('/api/users/signin', {email ,password});\r\n         dispatch({ type: USER_SIGNIN_SUCCESS, payload: data});\r\n         localStorage.setItem('userInfo',JSON.stringify(data));\r\n\r\n    }catch(error) {\r\n        dispatch({ type: USER_SIGNIN_FAIL,\r\n        payload: \r\n        error.response && error.response.data.message\r\n             ? error.response.data.message\r\n             : error.message,\r\n        });\r\n    }\r\n };\r\n\r\n export const signout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    localStorage.removeItem('cartItems');\r\n    dispatch({ type: USER_SIGNOUT});\r\n }\r\n"],"mappings":"AAAA,OAAQA,KAAR,MAAoB,OAApB;AACA,SAASC,kBAAT,EAA6BC,qBAA7B,EAAoDC,qBAApD,EAA2EC,gBAA3E,EAA6FC,mBAA7F,EAAkHC,mBAAlH,EAAuIC,YAAvI,QAA2J,4BAA3J;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;EAClEA,QAAQ,CAAC;IAAEC,IAAI,EAAEX,qBAAR;IAA+BY,OAAO,EAAE;MAAEJ,KAAF;MAASC;IAAT;EAAxC,CAAD,CAAR;;EACA,IAAI;IACF,MAAM;MAAEI;IAAF,IAAW,MAAMf,KAAK,CAACgB,IAAN,CAAW,qBAAX,EAAkC;MACvDP,IADuD;MAEvDC,KAFuD;MAGvDC;IAHuD,CAAlC,CAAvB;IAKAC,QAAQ,CAAC;MAAEC,IAAI,EAAEV,qBAAR;MAA+BW,OAAO,EAAEC;IAAxC,CAAD,CAAR;IACAH,QAAQ,CAAC;MAAEC,IAAI,EAAEP,mBAAR;MAA6BQ,OAAO,EAAEC;IAAtC,CAAD,CAAR;IACAE,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAjC;EACD,CATD,CASE,OAAOM,KAAP,EAAc;IACdT,QAAQ,CAAC;MACPC,IAAI,EAAEZ,kBADC;MAEPa,OAAO,EACLO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OADxB,GAEIF,KAAK,CAACE;IALL,CAAD,CAAR;EAOD;AACF,CApBG;AAsBN,OAAO,MAAMC,MAAM,GAAG,CAACd,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;EAC5DA,QAAQ,CAAC;IAAEC,IAAI,EAAER,mBAAR;IAA6BS,OAAO,EAAE;MAACJ,KAAD;MAAQC;IAAR;EAAtC,CAAD,CAAR;;EACA,IAAG;IACE,MAAM;MAAEI;IAAF,IAAW,MAAMf,KAAK,CAACgB,IAAN,CAAW,mBAAX,EAAgC;MAACN,KAAD;MAAQC;IAAR,CAAhC,CAAvB;IACAC,QAAQ,CAAC;MAAEC,IAAI,EAAEP,mBAAR;MAA6BQ,OAAO,EAAEC;IAAtC,CAAD,CAAR;IACAE,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAgCC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAhC;EAEJ,CALD,CAKC,OAAMM,KAAN,EAAa;IACVT,QAAQ,CAAC;MAAEC,IAAI,EAAET,gBAAR;MACTU,OAAO,EACPO,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAAtC,GACOF,KAAK,CAACC,QAAN,CAAeP,IAAf,CAAoBQ,OAD3B,GAEOF,KAAK,CAACE;IAJJ,CAAD,CAAR;EAMH;AACH,CAfM;AAiBP,OAAO,MAAME,OAAO,GAAG,MAAOb,QAAD,IAAc;EACxCK,YAAY,CAACS,UAAb,CAAwB,UAAxB;EACAT,YAAY,CAACS,UAAb,CAAwB,WAAxB;EACAd,QAAQ,CAAC;IAAEC,IAAI,EAAEN;EAAR,CAAD,CAAR;AACF,CAJM"},"metadata":{},"sourceType":"module"}